{"version":3,"file":"static/js/887.06c1a351.chunk.js","mappings":"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","sources":["webpack://Shop-Inforce-Frontend/./src/components/InputField/InputField.module.scss?1407","components/InputField/InputField.jsx","webpack://Shop-Inforce-Frontend/./src/components/PageWrapper/PageWrapper.module.scss?6ba7","components/PageWrapper/PageWrapper.jsx","webpack://Shop-Inforce-Frontend/./src/components/ModalWindow/ModalUniversal/ModalUniversal.module.scss?6d44","components/ModalWindow/ModalUniversal/ModalUniversal.jsx","webpack://Shop-Inforce-Frontend/./src/components/ModalWindow/ModalDeleteProduct/ModalDeleteProduct.module.scss?a287","components/ModalWindow/ModalDeleteProduct/ModalDeleteProduct.jsx","webpack://Shop-Inforce-Frontend/./src/components/ProductList/ProductList.module.scss?7cb7","components/ProductList/ProductList.jsx","webpack://Shop-Inforce-Frontend/./src/components/AddProductForm/AddProductForm.module.scss?8576","components/AddProductForm/AddProductForm.jsx","webpack://Shop-Inforce-Frontend/./src/components/ModalWindow/ModalAddProduct/ModalAddProduct.module.scss?7c98","components/ModalWindow/ModalAddProduct/ModalAddProduct.jsx","webpack://Shop-Inforce-Frontend/./src/components/DropdownMenu/DropdownMenu.module.scss?08ff","components/DropdownMenu/DropdownMenu.jsx","webpack://Shop-Inforce-Frontend/./src/pages/HomePage/Homepage.module.scss?3d17","pages/HomePage/HomePage.jsx","redux/modal/modalSelectors.js","redux/products/productsSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"InputField_label__su0GK\",\"inputTitle\":\"InputField_inputTitle__gI1yK\",\"inputField\":\"InputField_inputField__niwfm\"};","// Styles\nimport s from './InputField.module.scss';\n\nexport default function InputField(props) {\n  const { inputTitle, ...inputSetting } = props;\n\n  return (\n    <label className={s.label}>\n      <p className={s.inputTitle}>{inputTitle}</p>\n      <input className={s.inputField} {...inputSetting} />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageWrapper_container__NKNYi\",\"bg_page\":\"PageWrapper_bg_page__dDpv1\",\"wrapper\":\"PageWrapper_wrapper__lKrPY\"};","// Styles\nimport s from './PageWrapper.module.scss';\n\nexport default function PageWrapper({ children }) {\n  return (\n    <div className={s.bg_page}>\n      <div className={s.container}>\n        <div className={s.wrapper}>{children}</div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ModalUniversal_container__nnRkA\",\"modal__backdrop\":\"ModalUniversal_modal__backdrop__GcVSK\",\"modal__content\":\"ModalUniversal_modal__content__3pztF\",\"scaleTitle\":\"ModalUniversal_scaleTitle__YAYoG\",\"btnClose\":\"ModalUniversal_btnClose__uttkB\",\"btnClose__icon\":\"ModalUniversal_btnClose__icon__w2Hmi\"};","// React\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Icons\nimport { BsXLg } from 'react-icons/bs';\n\n// Styles\nimport s from './ModalUniversal.module.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalUniversal = ({ toggleAction, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.addEventListener('keydown', escKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.removeEventListener('keydown', escKeyDown);\n      document.body.style.overflow = '';\n    };\n  });\n\n  // handlers\n  const handleCloseModal = () => {\n    dispatch(toggleAction(false));\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      handleCloseModal();\n    }\n  };\n\n  const escKeyDown = e => {\n    if (e.code === 'Escape') {\n      handleCloseModal();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={s.modal__backdrop}\n      onClick={handleBackdropClick}\n      type=\"flipInX\"\n    >\n      <div className={s.modal__content}>\n        <button className={s.btnClose} onClick={handleCloseModal}>\n          <BsXLg className={s.btnClose__icon} />\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalUniversal;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ModalDeleteProduct_title__L6d1S\",\"desc\":\"ModalDeleteProduct_desc__jL7MV\",\"buttonWrapper\":\"ModalDeleteProduct_buttonWrapper__I4-7E\",\"buttonConfirm\":\"ModalDeleteProduct_buttonConfirm__AKAiu\",\"buttonCancel\":\"ModalDeleteProduct_buttonCancel__DMvqE\"};","// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleShowModalDeleteProduct } from 'redux/modal/modalSlice';\nimport productsOperations from 'redux/products/productsOperations';\nimport { modalSelectors } from 'redux/modal/modalSelectors';\n\n// Components\nimport ModalUniversal from '../ModalUniversal/ModalUniversal';\n\n// Styles\nimport s from './ModalDeleteProduct.module.scss';\n\nexport default function ModalDeleteProduct() {\n  const dispatch = useDispatch();\n  const deletedProductId = useSelector(modalSelectors.getDeletedProductId);\n\n  // Handlers\n  const handleCancel = () => {\n    dispatch(toggleShowModalDeleteProduct(false));\n  };\n\n  const handleDelete = () => {\n    dispatch(productsOperations.deleteProductById(deletedProductId));\n  };\n\n  return (\n    <ModalUniversal toggleAction={toggleShowModalDeleteProduct}>\n      <h2 className={s.title}>Delete Product?</h2>\n      <p className={s.desc}>\n        The product will be permanently deleted. Are you sure?\n      </p>\n      <div className={s.buttonWrapper}>\n        <button className={s.buttonConfirm} onClick={handleDelete}>\n          Yes\n        </button>\n        <button className={s.buttonCancel} onClick={handleCancel}>\n          No\n        </button>\n      </div>\n    </ModalUniversal>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProductList_container__z8y5B\",\"list\":\"ProductList_list__p4MKS\",\"item\":\"ProductList_item__mFImT\",\"link\":\"ProductList_link__VWBD5\",\"img\":\"ProductList_img__q7WBP\",\"productName\":\"ProductList_productName__cYpF8\",\"buttonDelete\":\"ProductList_buttonDelete__9C0Qg\",\"productCount\":\"ProductList_productCount__9Qnso\"};","// React\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport productsOperations from 'redux/products/productsOperations';\nimport { productsSelectors } from 'redux/products/productsSelectors';\nimport {\n  setDeletedProductId,\n  toggleShowModalDeleteProduct,\n} from 'redux/modal/modalSlice';\nimport { modalSelectors } from 'redux/modal/modalSelectors';\n\n// Components\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport ModalDeleteProduct from 'components/ModalWindow/ModalDeleteProduct/ModalDeleteProduct';\n\n// Styles\nimport s from './ProductList.module.scss';\n\nexport default function ProductList() {\n  const products = useSelector(productsSelectors.products);\n  const sortedValue = useSelector(productsSelectors.sortedValue);\n  const dispatch = useDispatch();\n\n  const showModalDeleteProduct = useSelector(\n    modalSelectors.showModalDeleteProduct\n  );\n\n  useEffect(() => {\n    dispatch(productsOperations.getAllProducts());\n  }, [dispatch]);\n\n  const sortedProducts = [...products].sort((a, b) => {\n    if (sortedValue === 'name') {\n      return a.name.localeCompare(b.name);\n    } else if (sortedValue === 'count') {\n      console.log('a.count', a.count);\n      return b.count - a.count;\n    } else {\n      return 1;\n    }\n  });\n\n  // Handlers\n  const handleDeleteBtn = id => {\n    dispatch(setDeletedProductId(id));\n    dispatch(toggleShowModalDeleteProduct(true));\n  };\n\n  return (\n    <>\n      <ul className={s.list}>\n        {sortedProducts.map(item => (\n          <li className={s.item} key={item._id}>\n            <button\n              className={s.buttonDelete}\n              onClick={() => {\n                handleDeleteBtn(item._id);\n              }}\n            >\n              <AiOutlineDelete size={20} />\n            </button>\n            <Link className={s.link} to={`/${item._id}`}>\n              <img className={s.img} src={item.imageUrl} alt=\"Img product\" />\n              <h2 className={s.productName}>{item.name}</h2>\n              <p className={s.productCount}>{`Count: ${item.count}`}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {showModalDeleteProduct && <ModalDeleteProduct />}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"AddProductForm_formWrapper__YDqzr\",\"form\":\"AddProductForm_form__OFEIg\",\"sizeWrapper\":\"AddProductForm_sizeWrapper__AZP4Z\",\"button\":\"AddProductForm_button__20iRW\",\"sizeTitle\":\"AddProductForm_sizeTitle__E-i+J\"};","// React\nimport { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport productsOperations from 'redux/products/productsOperations';\nimport { productsSelectors } from 'redux/products/productsSelectors';\n\n// Libraries\nimport { Notify } from 'notiflix';\n\n// Components\nimport { Loader } from 'components';\nimport InputField from 'components/InputField/InputField';\n\n// Styles\nimport s from './AddProductForm.module.scss';\n\nexport default function AddProductForm() {\n  const [imgProduct, setImgProduct] = useState('');\n  const [imgProductFile, setImgProductFile] = useState(null);\n  const [productName, setProductName] = useState('');\n  const [productCount, setProductCount] = useState(0);\n  const [productWidth, setProductWidth] = useState(0);\n  const [productHeight, setProductHeight] = useState(0);\n  const [productWeight, setProductWeight] = useState('');\n\n  // Dispatch\n  const dispatch = useDispatch();\n  const isLoadingProducts = useSelector(productsSelectors.isLoadingProducts);\n\n  // handlers\n  const handleOnChangeFile = e => {\n    const productImg = e.target.value;\n    const productImgFile = e.target.files[0];\n    const imgFormat = productImg.split('.').at(-1);\n\n    if (imgFormat !== 'png' && imgFormat !== 'jpeg' && imgFormat !== 'jpg') {\n      Notify.failure('Invalid image format. It has to be: PNG, JPEG or JPG');\n      setImgProduct('');\n      setImgProductFile(null);\n      return;\n    }\n\n    const data = new FormData();\n    data.append('product_img', productImgFile);\n\n    setImgProduct(productImg);\n    setImgProductFile(data);\n  };\n\n  const handleOnChangeName = e => {\n    setProductName(e.target.value);\n  };\n  const handleOnChangeCount = e => {\n    setProductCount(e.target.valueAsNumber);\n  };\n  const handleOnChangeWidth = e => {\n    setProductWidth(e.target.valueAsNumber);\n  };\n  const handleOnChangeHeight = e => {\n    setProductHeight(e.target.valueAsNumber);\n  };\n  const handleOnChangeWeight = e => {\n    setProductWeight(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    const dataForm = {\n      imgProductFile,\n      productName,\n      productCount,\n      productWidth,\n      productHeight,\n      productWeight,\n    };\n\n    if (imgProductFile === null || productName === '' || productWeight === '') {\n      Notify.failure('All fields are required');\n      return;\n    }\n\n    dispatch(productsOperations.addProduct(dataForm));\n  };\n\n  return (\n    <div className={s.formWrapper}>\n      <form encType=\"multipart/form-data\">\n        <label className={s.label}>\n          <p className={s.inputTitle}>Product photo</p>\n          <input\n            type=\"file\"\n            name=\"productImg\"\n            onChange={handleOnChangeFile}\n            value={imgProduct}\n          />\n        </label>\n      </form>\n      <form className={s.form}>\n        <InputField\n          inputTitle=\"Product Name\"\n          type=\"text\"\n          name=\"productName\"\n          onChange={handleOnChangeName}\n          value={productName}\n        />\n        <InputField\n          inputTitle=\"Count\"\n          type=\"number\"\n          name=\"count\"\n          onChange={handleOnChangeCount}\n          value={productCount}\n        />\n\n        <div>\n          <p className={s.sizeTitle}>Size:</p>\n          <div className={s.sizeWrapper}>\n            <InputField\n              inputTitle=\"Width\"\n              type=\"number\"\n              name=\"width\"\n              onChange={handleOnChangeWidth}\n              value={productWidth}\n            />\n            <InputField\n              inputTitle=\"Height\"\n              type=\"number\"\n              name=\"height\"\n              onChange={handleOnChangeHeight}\n              value={productHeight}\n            />\n          </div>\n        </div>\n        <InputField\n          inputTitle=\"Weight\"\n          type=\"text\"\n          name=\"weight\"\n          onChange={handleOnChangeWeight}\n          value={productWeight}\n        />\n        <button className={s.button} onClick={handleOnSubmit}>\n          {isLoadingProducts ? (\n            <Loader height={'20'} width={'20'} />\n          ) : (\n            'Add product'\n          )}\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ModalAddProduct_title__0FXbS\"};","import { toggleShowModalAddProduct } from 'redux/modal/modalSlice';\n\n// Components\nimport ModalUniversal from '../ModalUniversal/ModalUniversal';\nimport AddProductForm from '../../AddProductForm/AddProductForm';\n\n// Styles\nimport s from './ModalAddProduct.module.scss';\n\nconst ModalAddProduct = () => {\n  return (\n    <ModalUniversal toggleAction={toggleShowModalAddProduct}>\n      <h2 className={s.title}>Add Product</h2>\n      <AddProductForm />\n    </ModalUniversal>\n  );\n};\n\nexport default ModalAddProduct;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DropdownMenu_container__tLrwI\",\"list\":\"DropdownMenu_list__D80T-\",\"item\":\"DropdownMenu_item__g0wxK\"};","import React from 'react';\n\n// Styles\nimport s from './DropdownMenu.module.scss';\n\nexport default function DropdownMenu({ handleChooseValue }) {\n  return (\n    <ul className={s.list}>\n      <li\n        className={s.item}\n        onClick={() => {\n          handleChooseValue('name');\n        }}\n      >\n        name\n      </li>\n      <li\n        className={s.item}\n        onClick={() => {\n          handleChooseValue('count');\n        }}\n      >\n        count\n      </li>\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Homepage_container__3CcBp\",\"titleWrapper\":\"Homepage_titleWrapper__mArgD\",\"title\":\"Homepage_title__PTGen\",\"buttonAdd\":\"Homepage_buttonAdd__Pw6vj\",\"dropWrapper\":\"Homepage_dropWrapper__QV54Y\",\"buttonDrop\":\"Homepage_buttonDrop__2E-+o\"};","import { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleShowModalAddProduct } from 'redux/modal/modalSlice';\nimport { modalSelectors } from 'redux/modal/modalSelectors';\nimport { productsSelectors } from 'redux/products/productsSelectors';\nimport { setSortedValue } from 'redux/products/productsSlice';\n\n// Components\nimport PageWrapper from 'components/PageWrapper/PageWrapper';\nimport ProductList from 'components/ProductList/ProductList';\nimport ModalAddProduct from 'components/ModalWindow/ModalAddProduct/ModalAddProduct';\nimport DropdownMenu from 'components/DropdownMenu/DropdownMenu';\n\n// Styles\nimport s from './Homepage.module.scss';\n\nconst HomePage = () => {\n  const [dropIsOpen, setDropIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const showModalAddProduct = useSelector(modalSelectors.showModalAddProduct);\n  const sortedValue = useSelector(productsSelectors.sortedValue);\n\n  // Handlers\n  const handleAddBtn = () => {\n    dispatch(toggleShowModalAddProduct(true));\n  };\n\n  const handleOpenDrop = () => {\n    setDropIsOpen(!dropIsOpen);\n  };\n\n  const handleChooseValue = value => {\n    dispatch(setSortedValue(value));\n    setDropIsOpen(!dropIsOpen);\n  };\n\n  return (\n    <>\n      <PageWrapper>\n        <div>\n          <div className={s.titleWrapper}>\n            <h1 className={s.title}>Products</h1>\n            <div className={s.dropWrapper}>\n              <button className={s.buttonDrop} onClick={handleOpenDrop}>\n                {`Sorted by: ${sortedValue}`}\n              </button>\n              {dropIsOpen && (\n                <DropdownMenu handleChooseValue={handleChooseValue} />\n              )}\n            </div>\n            <button className={s.buttonAdd} onClick={handleAddBtn}>\n              Add Product\n            </button>\n          </div>\n          <ProductList />\n        </div>\n      </PageWrapper>\n      {showModalAddProduct && <ModalAddProduct />}\n    </>\n  );\n};\n\nexport default HomePage;\n","const showModalAddProduct = state => state.modal.showModalAddProduct;\nconst showModalDeleteProduct = state => state.modal.showModalDeleteProduct;\nconst showModalEditProduct = state => state.modal.showModalEditProduct;\n\nconst getDeletedProductId = state => state.modal.deletedProductId;\n\nexport const modalSelectors = {\n  showModalAddProduct,\n  showModalDeleteProduct,\n  getDeletedProductId,\n  showModalEditProduct,\n};\n","const products = state => state.products.products;\nconst isLoadingProducts = state => state.products.isLoading;\nconst sortedValue = state => state.products.sortedValue;\nconst currentProduct = state => state.products.currentProduct;\n\nexport const productsSelectors = {\n  products,\n  isLoadingProducts,\n  sortedValue,\n  currentProduct,\n};\n"],"names":["InputField","props","inputTitle","inputSetting","className","s","PageWrapper","children","modalRoot","document","querySelector","toggleAction","dispatch","useDispatch","useEffect","addEventListener","escKeyDown","body","style","overflow","removeEventListener","handleCloseModal","e","code","createPortal","onClick","currentTarget","target","type","ModalDeleteProduct","deletedProductId","useSelector","modalSelectors","toggleShowModalDeleteProduct","productsOperations","ProductList","products","productsSelectors","sortedValue","showModalDeleteProduct","sortedProducts","sort","a","b","name","localeCompare","console","log","count","map","item","id","_id","setDeletedProductId","size","to","src","imageUrl","alt","AddProductForm","useState","imgProduct","setImgProduct","imgProductFile","setImgProductFile","productName","setProductName","productCount","setProductCount","productWidth","setProductWidth","productHeight","setProductHeight","productWeight","setProductWeight","isLoadingProducts","encType","onChange","productImg","value","productImgFile","files","imgFormat","split","at","Notify","data","FormData","append","valueAsNumber","preventDefault","dataForm","height","width","toggleShowModalAddProduct","DropdownMenu","handleChooseValue","dropIsOpen","setDropIsOpen","showModalAddProduct","setSortedValue","state","modal","getDeletedProductId","showModalEditProduct","isLoading","currentProduct"],"sourceRoot":""}